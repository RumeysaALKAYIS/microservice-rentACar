package com.kodlama.inventoryService.kafka;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Service;

import com.kodlama.common.events.RentalUptadetEvent;
import com.kodlama.common.utilities.mapping.ModelMapperService;
import com.kodlama.inventoryService.business.abstracts.CarService;
import com.kodlama.inventoryService.business.requeses.updates.UpdateCarRequest;
import com.kodlama.inventoryService.business.requeses.updates.UpdateStateCarRequest;
import com.kodlama.inventoryService.business.responses.get.GetAllCarsResponse;
import com.kodlama.inventoryService.entities.Car;

import lombok.AllArgsConstructor;

@Service
@AllArgsConstructor

public class UpdateRentalConsumer {

	private static final Logger LOGGER = LoggerFactory.getLogger(UpdateRentalConsumer.class);
	private CarService carService;

	@KafkaListener(topics = "${spring.kafka.topic.name}", groupId = "update_rental")
	public void consume(RentalUptadetEvent event) {
		LOGGER.info(String.format("Rental Uptadet event received in stock service  => %s", event.toString()));

		
		
		UpdateStateCarRequest carRequest=new UpdateStateCarRequest();
		carRequest.setId(event.getExtCarId());
		carRequest.setState(0);
		
		this.carService.updateStateCar(carRequest);
		
		carRequest.setId(event.getNewCarId());
		carRequest.setState(1);
		this.carService.updateStateCar(carRequest);


	}
}
